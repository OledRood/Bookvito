#!/bin/bash

# Прекращаем выполнение скрипта, если любая команда завершится с ошибкой
set -e

# --- Шаг 1: Запрос у пользователя ---
# Спрашиваем, как запускать проект. -p выводит подсказку, -r не обрабатывает \
# -n 1 считывает 1 символ, choice - переменная для ответа.
# Добавляем таймер -t 5. Если за 5 секунд ничего не нажато, скрипт продолжит, выбрав вариант по умолчанию.
read -t 5 -p "Запустить локально? (Y/n) [автовыбор через 5с]: " -n 1 -r choice || true
echo # переводим строку после ввода

# --- Дополнительный шаг: Запуск Docker Desktop ---
echo
echo "######################################"
echo "### Ensuring Docker is running...  ###"
echo "######################################"
# Проверяем, является ли система macOS
if [[ "$OSTYPE" == "darwin"* ]]; then
    echo "Attempting to launch Docker Desktop on macOS..."
    open -a Docker
else
    echo "Please make sure Docker is running on your system."
fi

# --- Шаг 2: Сборка Docker-образов ---
echo "######################################"
echo "### Building Docker images...      ###"
echo "######################################"
docker-compose build

# --- Шаг 3: Логика запуска в зависимости от ответа ---
# Приводим ответ к нижнему регистру для удобства сравнения
case "$choice" in
  n|N )
    # --- РЕЖИМ ПОЛНОСТЬЮ В DOCKER ---
    echo
    echo "################################################################"
    echo "### Starting all services in Docker...                     ###"
    echo "################################################################"
    # Запускаем все сервисы, как определено в docker-compose.yml
    docker-compose up
    ;;
  * )
    # --- РЕЖИМ ЛОКАЛЬНОЙ РАЗРАБОТКИ GO ---
    # Этот блок сработает для 'y', 'Y' или просто Enter (по умолчанию)
    echo
    echo "################################################################"
    echo "### Starting services (postgres) in Docker...              ###"
    echo "################################################################"
    # Запускаем в фоновом режиме (-d) только сервис базы данных 'postgres'
    docker-compose up -d postgres

    echo
    echo "################################################################"
    echo "### Starting Go backend locally with Air...                  ###"
    echo "################################################################"
    # Проверяем, существует ли команда 'air'
    if ! command -v air &> /dev/null
    then
        echo "'air' не найден. Пожалуйста, установите его: go install github.com/cosmtrek/air@latest"
        exit 1
    fi
    # Запускаем Air. Предполагается, что скрипт запускается из корневой папки 'back'.
    air
    ;;
esac
